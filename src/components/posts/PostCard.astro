---
import Calendar from '@/icons/general/Calendar.astro';
import { dateFormat } from '@/lib/formatter';
import type { CollectionEntry } from 'astro:content';
import { TAGS } from '@/constants/tags';

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props;
const { data } = post;
---

<a
  href={`/blog/${post.slug}`}
  class="inline-block w-full p-4 border border-neutral-300/60 dark:border-neutral-700/60 rounded"
>
  <div class="w-full">
    <h3 class="inline font-geist text-lg font-medium text-neutral-900/90 dark:text-neutral-100/90 hover:text-neutral-900 dark:hover:text-neutral-100 transition-colors border-b border-transparent hover:border-neutral-900 dark:hover:border-neutral-100 border-dotted">
      {data.title}
    </h3>
  </div>

  <p class="font-geist text-sm text-neutral-600 dark:text-neutral-400 mt-2">
    {data.description}
  </p>

  <ul class='flex flex-row flex-wrap mt-2 gap-2'>
    {data.tags.map((tag: string) => {
      const Icon = TAGS[tag.toUpperCase()]?.icon || TAGS['DEFAULT'].icon;
      
      return (
        <li>
          <span
            class={`flex items-center gap-x-2 rounded-full backdrop-blur-md text-xs font-bold font-mono ${TAGS[tag.toUpperCase()].class } py-1 px-3`}
          >
            {<Icon class='size-4' />}
            {tag}
          </span>
        </li>
      )
    })}
  </ul>

  <footer class="flex items-center justify-between mt-4">
    <div class="flex justify-center items-end gap-1 p-1 rounded border border-neutral-300/60 dark:border-neutral-700/60">
      <Calendar class="size-4" />

      <p class="font-geist text-xs text-neutral-900 dark:text-neutral-100">
        {dateFormat(data.date)}
      </p>
    </div>

    <p class="font-geist text-sm text-neutral-500 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-neutral-100 transition-colors">
      Ver m√°s...
    </p>
  </footer>
</a>